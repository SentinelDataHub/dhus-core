<?xml version="1.0" encoding="UTF-8"?>
<!--
   Data Hub Service (DHuS) - For Space data distribution.
   Copyright (C) 2015,2016,2017 GAEL Systems

   This file is part of DHuS software sources.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as
   published by the Free Software Foundation, either version 3 of the
   License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program. If not, see <http://www.gnu.org/licenses/>.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd" >

   <context:component-scan base-package="fr.gael.dhus.database" />

   <bean id="boneCPDataSource" class="com.jolbox.bonecp.BoneCPDataSource">
      <property name="driverClass" value="#{ configurationManager.getJDBCDriver() }" />
      <property name="jdbcUrl" value="#{ configurationManager.getJDBCUrl() }" />
      <property name="username" value="#{ configurationManager.getLogin() }" />
      <property name="password" value="#{ configurationManager.getPassword() }" />

      <property name="idleConnectionTestPeriodInMinutes" value="60"/>
      <property name="idleMaxAgeInMinutes" value="240"/>
      <property name="maxConnectionsPerPartition" value="60"/>
      <property name="minConnectionsPerPartition" value="20"/>
      <property name="partitionCount" value="3"/>
      <property name="acquireIncrement" value="10"/>
      <property name="statementsCacheSize" value="50"/>
   </bean>

   <!-- Spring bean configuration. Tell Spring to bounce off BoneCP -->
   <bean id="dataSource"
         class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
      <property name="targetDataSource" ref="boneCPDataSource" />
   </bean>

   <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="packagesToScan">
         <list>
            <value>fr.gael.dhus.database.object</value>
         </list>
      </property>
      <property name="hibernateProperties">
         <props>
            <prop key="hibernate.dialect">#{ configurationManager.getHibernateDialect() }</prop>
            <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
            <prop key="hibernate.show_sql">false</prop>
            <prop key="hibernate.format_sql">true</prop>
            <prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
            <prop key="javax.persistence.validation.mode">none</prop>
         </props>
      </property>
   </bean>

   <!-- Listeners -->
   <bean id="saveEventListener" parent="callbackHandlerEventListener" class="org.hibernate.ejb.event.EJB3SaveEventListener" />
   <bean id="flushEntityEventListener" parent="callbackHandlerEventListener" class="org.hibernate.ejb.event.EJB3FlushEntityEventListener" />
   <bean id="postLoadEventListener" parent="callbackHandlerEventListener" class="org.hibernate.ejb.event.EJB3PostLoadEventListener" />
   <bean id="entityCallbackHandler" class="org.hibernate.ejb.event.EntityCallbackHandler" />
   <bean id="callbackHandlerEventListener" abstract="true" class="org.hibernate.ejb.event.CallbackHandlerConsumer">
      <property name="callbackHandler" ref="entityCallbackHandler" />
   </bean>

   <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
      <property name="dataSource" ref="dataSource" />
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
   <tx:annotation-driven />
</beans>
